分层设计细节
1. 需求：
直观查看实时环境、障碍物分布；
为地面建立网格坐标；
AI 辅助导航指令（文字 / 语音均可）；
可手动干预导航决策（如目的地，紧急停止等）。
2. 前端层功能：提供可视化交互界面，实时展示数据并接收用户操作。
视频监控面板-显示原始摄像头画面、透视校正后的网格视图；支持全屏 / 缩放。	WebRTC 实时拉流（或后端转发的视频帧）；Canvas 绘制网格线和障碍物标记。
障碍物列表-以列表形式展示检测到的障碍物（类型、坐标、置信度）；支持筛选 / 排序。	响应式表格；WebSocket 实时更新数据。
AI 指令中心-突出显示最新导航指令（动作 + 参数 + 理由）；历史指令滚动展示；支持语音播报。	动态 DOM 更新；Web Speech API 实现语音合成；指令优先级高亮（如 “停止” 标红）。
系统状态面板-显示摄像头连接状态、LLM 服务状态、网络延迟等；异常时报警。	状态图标（绿 / 黄 / 红）；定时健康检查请求。

3. 后端服务层（核心逻辑）
采用微服务拆分，通过 FastAPI 构建 API 网关，各服务独立部署、可单独扩容。
后端服务层
├── API网关服务（统一入口）
├── 视频采集服务（获取摄像头流）
├── YOLO检测服务（核心，障碍物识别）
├── 透视校正服务（网格坐标转换）
├── LLM决策服务（基于YOLO结果生成指令）
├── 实时通信服务（推送YOLO检测结果）
└── 数据存储服务（保存YOLO检测历史）

服务间通信：

同步通信：REST API（如视频处理服务→LLM 服务发送障碍物数据）；
异步通信：Redis Pub/Sub（如 LLM 服务生成指令后，实时推送到通信服务）。

4. 数据存储层（数据持久化）
采用 “关系型数据库 + 缓存 + 文件存储” 组合，兼顾结构化数据与非结构化数据。

- 障碍物统计（类型、出现频率、位置分布）。
- 校准参数（透视矩阵、像素 - 米比例）；
- 校准点截图（用于后续分析精度）。

数据流转示例：

实时数据（如当前指令）→ Redis（有效期 5 分钟）；
每 10 分钟将 Redis 中的实时数据归档→ PostgreSQL；
异常事件触发时，视频片段→ MinIO，并记录关联 ID 到 PostgreSQL。
5. 硬件 / 感知层（数据采集）
核心设备：

摄像头：1080P 分辨率，帧率≥15fps（USB/IP 摄像头，支持 RTSP 流）；
可选辅助设备：IMU（惯性测量单元，用于获取朝向角度）、麦克风（用于语音控制）。

如果需要的话：可以设定为人为拿着摄像头环视周围，来得到更清晰的环境数据。


